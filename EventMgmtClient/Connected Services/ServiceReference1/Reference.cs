//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventMgmtClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Participant", Namespace="http://schemas.datacontract.org/2004/07/EventMgmtServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Participant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParticipantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantfNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantlNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((this.MobileNoField.Equals(value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParticipantId {
            get {
                return this.ParticipantIdField;
            }
            set {
                if ((this.ParticipantIdField.Equals(value) != true)) {
                    this.ParticipantIdField = value;
                    this.RaisePropertyChanged("ParticipantId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParticipantfName {
            get {
                return this.ParticipantfNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantfNameField, value) != true)) {
                    this.ParticipantfNameField = value;
                    this.RaisePropertyChanged("ParticipantfName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParticipantlName {
            get {
                return this.ParticipantlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantlNameField, value) != true)) {
                    this.ParticipantlNameField = value;
                    this.RaisePropertyChanged("ParticipantlName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Venue", Namespace="http://schemas.datacontract.org/2004/07/EventMgmtServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Venue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VenueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenueNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VenueId {
            get {
                return this.VenueIdField;
            }
            set {
                if ((this.VenueIdField.Equals(value) != true)) {
                    this.VenueIdField = value;
                    this.RaisePropertyChanged("VenueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenueName {
            get {
                return this.VenueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VenueNameField, value) != true)) {
                    this.VenueNameField = value;
                    this.RaisePropertyChanged("VenueName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organizer", Namespace="http://schemas.datacontract.org/2004/07/EventMgmtServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Organizer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizerContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizerContact {
            get {
                return this.OrganizerContactField;
            }
            set {
                if ((this.OrganizerContactField.Equals(value) != true)) {
                    this.OrganizerContactField = value;
                    this.RaisePropertyChanged("OrganizerContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizerEmail {
            get {
                return this.OrganizerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerEmailField, value) != true)) {
                    this.OrganizerEmailField = value;
                    this.RaisePropertyChanged("OrganizerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizerId {
            get {
                return this.OrganizerIdField;
            }
            set {
                if ((this.OrganizerIdField.Equals(value) != true)) {
                    this.OrganizerIdField = value;
                    this.RaisePropertyChanged("OrganizerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizerName {
            get {
                return this.OrganizerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerNameField, value) != true)) {
                    this.OrganizerNameField = value;
                    this.RaisePropertyChanged("OrganizerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/EventMgmtServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VenueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizerId {
            get {
                return this.OrganizerIdField;
            }
            set {
                if ((this.OrganizerIdField.Equals(value) != true)) {
                    this.OrganizerIdField = value;
                    this.RaisePropertyChanged("OrganizerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VenueId {
            get {
                return this.VenueIdField;
            }
            set {
                if ((this.VenueIdField.Equals(value) != true)) {
                    this.VenueIdField = value;
                    this.RaisePropertyChanged("VenueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Registration", Namespace="http://schemas.datacontract.org/2004/07/EventMgmtServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Registration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParticipantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegistrationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fees {
            get {
                return this.FeesField;
            }
            set {
                if ((this.FeesField.Equals(value) != true)) {
                    this.FeesField = value;
                    this.RaisePropertyChanged("Fees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParticipantId {
            get {
                return this.ParticipantIdField;
            }
            set {
                if ((this.ParticipantIdField.Equals(value) != true)) {
                    this.ParticipantIdField = value;
                    this.RaisePropertyChanged("ParticipantId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegistrationId {
            get {
                return this.RegistrationIdField;
            }
            set {
                if ((this.RegistrationIdField.Equals(value) != true)) {
                    this.RegistrationIdField = value;
                    this.RaisePropertyChanged("RegistrationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetParticipants", ReplyAction="http://tempuri.org/IService1/GetParticipantsResponse")]
        System.Data.DataSet GetParticipants();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetParticipants", ReplyAction="http://tempuri.org/IService1/GetParticipantsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetParticipantsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetParticipant", ReplyAction="http://tempuri.org/IService1/GetParticipantResponse")]
        EventMgmtClient.ServiceReference1.Participant GetParticipant(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetParticipant", ReplyAction="http://tempuri.org/IService1/GetParticipantResponse")]
        System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Participant> GetParticipantAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteParticipant", ReplyAction="http://tempuri.org/IService1/DeleteParticipantResponse")]
        bool DeleteParticipant(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteParticipant", ReplyAction="http://tempuri.org/IService1/DeleteParticipantResponse")]
        System.Threading.Tasks.Task<bool> DeleteParticipantAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVenues", ReplyAction="http://tempuri.org/IService1/GetVenuesResponse")]
        System.Data.DataSet GetVenues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVenues", ReplyAction="http://tempuri.org/IService1/GetVenuesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetVenuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVenue", ReplyAction="http://tempuri.org/IService1/GetVenueResponse")]
        EventMgmtClient.ServiceReference1.Venue GetVenue(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVenue", ReplyAction="http://tempuri.org/IService1/GetVenueResponse")]
        System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Venue> GetVenueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVenue", ReplyAction="http://tempuri.org/IService1/DeleteVenueResponse")]
        bool DeleteVenue(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVenue", ReplyAction="http://tempuri.org/IService1/DeleteVenueResponse")]
        System.Threading.Tasks.Task<bool> DeleteVenueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrganizers", ReplyAction="http://tempuri.org/IService1/GetOrganizersResponse")]
        System.Data.DataSet GetOrganizers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrganizers", ReplyAction="http://tempuri.org/IService1/GetOrganizersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetOrganizersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrganizer", ReplyAction="http://tempuri.org/IService1/GetOrganizerResponse")]
        EventMgmtClient.ServiceReference1.Organizer GetOrganizer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrganizer", ReplyAction="http://tempuri.org/IService1/GetOrganizerResponse")]
        System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Organizer> GetOrganizerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrganizer", ReplyAction="http://tempuri.org/IService1/DeleteOrganizerResponse")]
        bool DeleteOrganizer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrganizer", ReplyAction="http://tempuri.org/IService1/DeleteOrganizerResponse")]
        System.Threading.Tasks.Task<bool> DeleteOrganizerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEvents", ReplyAction="http://tempuri.org/IService1/GetEventsResponse")]
        System.Data.DataSet GetEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEvents", ReplyAction="http://tempuri.org/IService1/GetEventsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEvent", ReplyAction="http://tempuri.org/IService1/GetEventResponse")]
        EventMgmtClient.ServiceReference1.Event GetEvent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEvent", ReplyAction="http://tempuri.org/IService1/GetEventResponse")]
        System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Event> GetEventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEvent", ReplyAction="http://tempuri.org/IService1/DeleteEventResponse")]
        bool DeleteEvent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEvent", ReplyAction="http://tempuri.org/IService1/DeleteEventResponse")]
        System.Threading.Tasks.Task<bool> DeleteEventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRegistrations", ReplyAction="http://tempuri.org/IService1/GetRegistrationsResponse")]
        System.Data.DataSet GetRegistrations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRegistrations", ReplyAction="http://tempuri.org/IService1/GetRegistrationsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRegistrationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRegistration", ReplyAction="http://tempuri.org/IService1/GetRegistrationResponse")]
        EventMgmtClient.ServiceReference1.Registration GetRegistration(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRegistration", ReplyAction="http://tempuri.org/IService1/GetRegistrationResponse")]
        System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Registration> GetRegistrationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRegistration", ReplyAction="http://tempuri.org/IService1/DeleteRegistrationResponse")]
        bool DeleteRegistration(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRegistration", ReplyAction="http://tempuri.org/IService1/DeleteRegistrationResponse")]
        System.Threading.Tasks.Task<bool> DeleteRegistrationAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : EventMgmtClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<EventMgmtClient.ServiceReference1.IService1>, EventMgmtClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetParticipants() {
            return base.Channel.GetParticipants();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetParticipantsAsync() {
            return base.Channel.GetParticipantsAsync();
        }
        
        public EventMgmtClient.ServiceReference1.Participant GetParticipant(int id) {
            return base.Channel.GetParticipant(id);
        }
        
        public System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Participant> GetParticipantAsync(int id) {
            return base.Channel.GetParticipantAsync(id);
        }
        
        public bool DeleteParticipant(int id) {
            return base.Channel.DeleteParticipant(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteParticipantAsync(int id) {
            return base.Channel.DeleteParticipantAsync(id);
        }
        
        public System.Data.DataSet GetVenues() {
            return base.Channel.GetVenues();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetVenuesAsync() {
            return base.Channel.GetVenuesAsync();
        }
        
        public EventMgmtClient.ServiceReference1.Venue GetVenue(int id) {
            return base.Channel.GetVenue(id);
        }
        
        public System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Venue> GetVenueAsync(int id) {
            return base.Channel.GetVenueAsync(id);
        }
        
        public bool DeleteVenue(int id) {
            return base.Channel.DeleteVenue(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteVenueAsync(int id) {
            return base.Channel.DeleteVenueAsync(id);
        }
        
        public System.Data.DataSet GetOrganizers() {
            return base.Channel.GetOrganizers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetOrganizersAsync() {
            return base.Channel.GetOrganizersAsync();
        }
        
        public EventMgmtClient.ServiceReference1.Organizer GetOrganizer(int id) {
            return base.Channel.GetOrganizer(id);
        }
        
        public System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Organizer> GetOrganizerAsync(int id) {
            return base.Channel.GetOrganizerAsync(id);
        }
        
        public bool DeleteOrganizer(int id) {
            return base.Channel.DeleteOrganizer(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteOrganizerAsync(int id) {
            return base.Channel.DeleteOrganizerAsync(id);
        }
        
        public System.Data.DataSet GetEvents() {
            return base.Channel.GetEvents();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEventsAsync() {
            return base.Channel.GetEventsAsync();
        }
        
        public EventMgmtClient.ServiceReference1.Event GetEvent(int id) {
            return base.Channel.GetEvent(id);
        }
        
        public System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Event> GetEventAsync(int id) {
            return base.Channel.GetEventAsync(id);
        }
        
        public bool DeleteEvent(int id) {
            return base.Channel.DeleteEvent(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEventAsync(int id) {
            return base.Channel.DeleteEventAsync(id);
        }
        
        public System.Data.DataSet GetRegistrations() {
            return base.Channel.GetRegistrations();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRegistrationsAsync() {
            return base.Channel.GetRegistrationsAsync();
        }
        
        public EventMgmtClient.ServiceReference1.Registration GetRegistration(int id) {
            return base.Channel.GetRegistration(id);
        }
        
        public System.Threading.Tasks.Task<EventMgmtClient.ServiceReference1.Registration> GetRegistrationAsync(int id) {
            return base.Channel.GetRegistrationAsync(id);
        }
        
        public bool DeleteRegistration(int id) {
            return base.Channel.DeleteRegistration(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRegistrationAsync(int id) {
            return base.Channel.DeleteRegistrationAsync(id);
        }
    }
}
